#!/usr/bin/env python3

import os, sys
from argparse import ArgumentParser
from banan import *

map_of_maps = {

    'yabank'        : { '.csv' : yAbankCSVParser,
                        '.pdf' : yAbankPDFParser },

    'banknorwegian' : { '.csv' : BankNorwegianCSVParser,
                        '.xls' : BankNorwegianXLSParser,
                        '.xlsx': BankNorwegianXLSParser }

} 


def main(args):

    conf = Config()
    db = TransactionsDB(conf)

    if args.update:
        db.update_labels()

    if args.files:
        try:
            for fpath in args.files:
                ext = os.path.splitext(fpath)[1]
                bankparser = None
                try:
                    assert(ext)
                    if not args.bank: raise AttributeError
                    bankparser = map_of_maps[args.bank.lower()][ext]
                except AttributeError:
                    print('ERROR: option -f requires option -b')
                    exit(0)
                except AssertionError:
                    print('ERROR: FILE must have file extension, e.g. \'.csv\'')
                    exit(0)
                except KeyError:
                    print('ERROR: %s %s parser not implemented' % (args.bank, ext))
                    exit(0)
                print('.. ' + fpath)
                db.feed(fpath, bankparser)
        except SystemExit:
            print('SystemExit raised')
            exit(0)

    if args.server_action:
        if args.server_action == 'stop':
            Server.stop()
        elif args.server_action == 'start':
            Server().start()
        else:
            Server().restart()


def parse_args():

    usage = '%s start | restart | stop | -f -b | -u | -h' % sys.argv[0]
    desc = 'Manage database or server.'

    parser = ArgumentParser(usage=usage, description=desc)

    db_group = parser.add_argument_group('# Database')
    db_group.add_argument('-f', '--feed', dest='files', metavar='FILES', help='feed FILES to database', nargs='+')
    db_group.add_argument('-b', '--bank', dest='bank', metavar='BANK', help='origin of FILES')
    db_group.add_argument('-u', '--update', dest='update', 
                          const=True, default=False, action='store_const',
                          help='re-assign labels')

    db_opts = parser.add_argument_group('  options')

    server_group = parser.add_argument_group('# Server')
    server_group.add_argument(dest='server_action', choices=('start','restart','stop'),
                              help='start, restart or stop server', nargs='?')

    args = parser.parse_args(sys.argv[1:])
    if not args.files and not args.server_action and not args.update:
        parser.print_help()
        exit(0)

    return args


if __name__ == '__main__':
    args = parse_args()
    main(args)
